
--MongoDB Exercise one
-- 1-Create a database "Todo"
use Todo 

switched to db Todo

-- 2- Insert the exported data into the related collections
-- add Users
db.user.insert([{"name": "Aarika Ellingworth", "email": "aellingworth0@harvard.edu", "phone": "483-396-8795"},
{"name": "Pren Goldsworthy", "email": "pgoldsworthy1@spotify.com", "phone": "635-572-8467"},
{"name": "Pablo Kisbee", "email": "pkisbee2@lulu.com", "phone": "790-962-8683"},
{"name": "Rodie Duncan", "email": "rduncan3@quantcast.com", "phone": "646-743-6191"},
{"name": "Aubry Polak", "email": "apolak4@indiatimes.com", "phone": "302-678-7931"},
{"name": "Maryrose Meadows", "email": "mmeadows5@comcast.net", "phone": "251-524-6594"},
{"name": "Pavel Brushneen", "email": "pbrushneen6@techcrunch.com", "phone": "316-170-3640"},
{"name": "Hedy Gerault", "email": "hgerault7@nymag.com", "phone": "176-177-5579"},
{"name": "王秀英", "email": "wang.xiuying@weebly.com", "phone": "891-952-6749"},
{"name": "إلياس", "email": "elias@github.com", "phone": "202-517-6983"},
{"name": "Donald Duck", "email": "donald@duck.com", "phone": null}])

-- to show user collections :
> show collections
user

-- to show users :
> db.user.find()


-- add tasks
db.task.insert([{"title": "Wash clothes", "created": "2017-10-25 06:54:16", "updated": "2017-10-15 13:05:09", "due_date": null, "description": "Title says it all."},
{"title": "Become a billionaire", "created": "2017-09-26 03:06:46", "updated": "2017-10-08 06:14:31", "due_date": "2017-12-22 20:58:03", "description": "This should not take long, just invent a time machine, travel back to 2010 and buy bitcoin"},
{"title": "Plan meeting with London office", "created": "2017-10-04 18:07:37", "updated": "2017-10-14 16:01:31", "due_date": "2017-12-05 19:42:15", "description": "We will probably use skype"},
{"title": "Order groceries online", "created": "2017-09-20 19:34:43", "updated": "2017-10-15 23:35:45", "due_date": "2017-12-24 16:00:46", "description": "The fridge is almost empty, we need eggs and milk"},
{"title": "Empty the mailbox", "created": "2017-09-27 15:17:08", "updated": "2017-10-08 17:31:16", "due_date": null, "description": null},
{"title": "Fix the flat tire on the bike", "created": "2017-09-13 23:16:30", "updated": "2017-10-06 04:03:52", "due_date": "2017-12-07 11:51:11", "description": "Tools are in the garage"},
{"title": "Wash the car", "created": "2017-10-06 19:39:16", "updated": "2017-10-03 04:49:05", "due_date": "2017-12-04 17:43:16", "description": null},
{"title": "Walk the dog", "created": "2017-09-03 02:47:17", "updated": "2017-10-12 18:40:08", "due_date": null, "description": null},
{"title": "Write a book", "created": "2017-10-11 06:14:01", "updated": "2017-10-17 12:19:08", "due_date": "2017-12-21 20:18:05", "description": "Maybe something about dragons?"},
{"title": "Do HackYourFuture homework", "created": "2017-10-04 13:55:16", "updated": "2017-10-10 00:18:05", "due_date": "2017-12-19 17:01:10", "description": null},
{"title": "Iron shirts", "created": "2017-09-23 03:59:58", "updated": "2017-10-19 08:30:48", "due_date": "2017-12-08 11:00:35", "description": null},
{"title": "Water the potted plants", "created": "2017-09-29 23:38:42", "updated": "2017-10-08 04:24:53", "due_date": null, "description": "Maybe they need fertilizer as well"},
{"title": "Buy wine for the birthday party", "created": "2017-10-10 14:57:22", "updated": "2017-10-14 14:03:30", "due_date": "2017-12-10 23:43:56", "description": "Both red and white wine"},
{"title": "Buy gift for Paul", "created": "2017-09-09 05:22:08", "updated": "2017-10-17 15:58:05", "due_date": "2017-12-04 20:45:18", "description": "He could use a shirt or a tie and some socks"},
{"title": "Change lightbulb in hallway", "created": "2017-10-01 19:07:35", "updated": "2017-10-03 10:02:27", "due_date": "2017-12-08 17:09:03", "description": "Should be an LED bulb"},
{"title": "Wash windows", "created": "2017-10-02 22:15:17", "updated": "2017-10-07 22:31:35", "due_date": "2017-12-06 03:36:09", "description": null},
{"title": "Setup salary databases for accounting", "created": "2017-10-25 05:35:33", "updated": "2017-10-10 23:22:33", "due_date": "2017-12-05 00:19:08", "description": "Use MySQL"},
{"title": "Learn how databases work", "created": "2017-09-06 03:16:47", "updated": "2017-10-10 16:56:58", "due_date": "2017-12-18 05:08:05", "description": null},
{"title": "Make the databases perform better", "created": "2017-10-03 09:27:20", "updated": "2017-10-01 16:27:46", "due_date": "2017-12-01 13:28:35", "description": "It should be possible to optimize the indexes"},
{"title": "Buy beer for the company party", "created": "2017-10-08 01:39:02", "updated": "2017-10-13 23:07:41", "due_date": null, "description": "2 or 3 cases should be enough"},
{"title": "Knit sweater", "created": "2017-09-22 17:14:55", "updated": "2017-10-08 09:01:35", "due_date": "2017-12-15 20:33:57", "description": null},
{"title": "Charge electric bicycle", "created": "2017-10-10 12:25:07", "updated": "2017-10-07 21:45:01", "due_date": "2017-12-10 19:02:17", "description": "It sucks to ride it without a battery!"},
{"title": "Buy new phone", "created": "2017-09-17 00:25:34", "updated": "2017-10-09 11:48:12", "due_date": null, "description": "The battery in the current one only lasts 5 hours "},
{"title": "Ride bike aroud Sjælland", "created": "2017-10-20 19:21:13", "updated": "2017-10-07 01:38:06", "due_date": "2017-12-19 15:08:18", "description": "Remember rainclothes and tire repair kit!"},
{"title": "Look at apartments in Ørestad", "created": "2017-10-30 09:47:00", "updated": "2017-10-19 06:11:26", "due_date": null, "description": "2 or 3 rooms"},
{"title": "Empty Mr Fluffy's litterbox", "created": "2017-09-28 03:09:06", "updated": "2017-10-13 10:38:34", "due_date": "2017-12-20 23:37:18", "description": null},
{"title": "Buy new dining room table and chairs", "created": "2017-09-21 12:02:34", "updated": "2017-10-02 02:05:11", "due_date": "2017-12-06 00:14:30", "description": "Ikea has some on sale"},
{"title": "Renew buscard", "created": "2017-10-07 22:47:51", "updated": "2017-10-09 15:50:03", "due_date": "2017-12-01 14:25:40", "description": "3 zones"},
{"title": "Sign up for linkedin", "created": "2017-09-04 00:57:47", "updated": "2017-10-18 18:07:48", "due_date": "2017-12-07 23:04:38", "description": "Make the CV awesome!"},
{"title": "Remove facebook from phone", "created": "2017-10-26 17:15:07", "updated": "2017-10-13 03:36:47", "due_date": "2017-12-19 11:10:02", "description": "To avoid interruptions when working"},
{"title": "Backup databases to external disk", "created": "2017-09-09 17:32:33", "updated": "2017-10-01 21:18:59", "due_date": "2017-12-23 14:21:01", "description": "Remember to store the disk in another physical location"},
{"title": "Put up the new lamp in the hallway", "created": "2017-10-15 05:45:54", "updated": "2017-10-16 14:05:35", "due_date": "2017-12-29 02:29:26", "description": null},
{"title": "Hang up paintings in living room", "created": "2017-09-10 05:36:11", "updated": "2017-10-09 17:40:42", "due_date": null, "description": null},
{"title": "Buy plane ticket to Auckland", "created": "2017-09-05 09:07:22", "updated": "2017-10-15 09:36:06", "due_date": "2017-12-07 11:10:05", "description": "Check prices online first!"},
{"title": "Learn about NoSQL databases", "created": "2017-10-20 01:41:53", "updated": "2017-10-04 07:19:56", "due_date": "2017-12-23 10:13:42", "description": "MongoDB, CouchDB, etc."}])



-- to show all collections :
> show collections
user
task

-- to show task :
> db.task.find()

-- add status
db.status.insert([{"name": "Not started"}, {"name": "In progress"},{"name": "Done"}])


-- to show  all collections :
> show collections
user
task
status

-- to show status :
> db.status.find()


--3- Find the length of each collection using db."collection_name".find().length()

db.user.find().length() 
//or
 db.user.find().count() 

 db.task.find().length() 
//or
 db.task.find().count() 
 db.status.find().length() 
//or
 db.status.find().count() 


 -- 4- Return the first document of tasks collection using .limit()

 db.task.find().limit(1)
-- or we can use for find the first item : 
db.task.findOne()

-- 5- Return the third document of the task collection using .skip() and .limit()

db.task.find().limit(1).skip(2)

db.task.findOne().skip(2)

-- 6- Find the documents which "description" is "learning Danish during physical working" using .find({condition})

db.task.find({"description" : "learning Danish during physical working"})
